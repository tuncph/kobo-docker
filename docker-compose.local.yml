rabbit:
  image: kobotoolbox/rabbit:latest
  # Dev: Build the image locally.
  # build: ./base_images/rabbit
  hostname: rabbit
  environment:
    - RABBITMQ_LOG_BASE=/var/log/rabbitmq
  volumes:
    - ./log/rabbitmq:/var/log/rabbitmq
  restart: on-failure

postgres:
  image: kobotoolbox/postgres:latest
  # Dev: Build the image locally.
  # build: ./base_images/postgres
  hostname: postgres
  env_file:
    - ./envfile.local.txt
  volumes:
    - ./.vols/db:/srv/db
    - ./backups/postgres:/srv/backups
    - ./base_images/postgres/init_postgres.bash:/etc/my_init.d/10_init_postgres.bash:ro
  restart: on-failure

mongo:
  image: kobotoolbox/mongo:latest
  # Dev: Build the image locally.
  # build: ./base_images/mongo
  hostname: mongo
  environment:
    - MONGO_DATA=/srv/db
  env_file:
    - ./envfile.local.txt
  # NOTE: On OS X and Windows, comment out the following `volumes` directive
  #   as a workaround to a VirtualBox folder sharing+Mongo incompatibility.
  #   See the "WARNING" at https://hub.docker.com/_/mongo/
  volumes:
    - ./.vols/mongo:/srv/db
    - ./backups/mongo:/srv/backups
  restart: on-failure

kobocat:
  image: kobotoolbox/kobocat:2.018.31
  # Dev: Build the image locally.
  # build: ../kobocat
  hostname: kobocat
  env_file:
    - ./envfile.local.txt
    - ./envfiles/local/aws.txt
    - ./envfiles/local/external_services.txt
    - ./envfiles/local/kobocat.txt
    - ./envfiles/local/nginx.txt
    - ./envfiles/local/smtp.txt
  links:
    - rabbit
    - mongo
    - postgres
    - kpi
  volumes:
    - ./.vols/static/kobocat:/srv/static
    - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
    - ./backups/kobocat:/srv/backups
    - ./log/kobocat:/srv/logs
    - ./scripts/wait_for_rabbit.bash:/etc/my_init.d/01_wait_for_rabbit.bash:ro
    - ./scripts/wait_for_mongo.bash:/etc/my_init.d/02_wait_for_mongo.bash:ro
    - ./scripts/wait_for_postgres.bash:/etc/my_init.d/03_wait_for_postgres.bash:ro
    - ./scripts/wait_for_kpi.bash:/etc/my_init.d/04_wait_for_kpi.bash:ro
    - ./scripts/runtime_variables_kobocat.source.bash:/etc/profile.d/runtime_variables_kobocat.source.bash.sh:ro
    # Dev: Use live source directories from the host machine.
    # - ../kobocat:/srv/src/kobocat
    #- ../formpack/src/formpack:/usr/local/lib/python2.7/dist-packages/formpack
    # Dev: Share PyDev remote debugger source into container.
    #- ~/devel/liclipse/plugins/org.python.pydev_5.4.0.201611281405/pysrc:/srv/pydev_orig:ro
    # Dev: Share your `.transifexrc` into the container.
    # - ./.transifexrc:/root/.transifexrc
  environment:
    - ENKETO_PROTOCOL=http
  restart: on-failure

kpi:
  image: kobotoolbox/kpi:2.018.32
  # Dev: Build the image locally.
  # build: ../kpi
  hostname: kpi
  env_file:
    - ./envfile.local.txt
    - ./envfiles/local/aws.txt
    - ./envfiles/local/external_services.txt
    - ./envfiles/local/kpi.txt
    - ./envfiles/local/nginx.txt
    - ./envfiles/local/smtp.txt
  links:
    - postgres
    - rabbit
    - mongo
  volumes:
    - ./.vols/static/kpi:/srv/static
    - ./.vols/kpi_media:/srv/src/kpi/media
    # The Whoosh search index needs persistent storage
    - ./.vols/whoosh:/srv/whoosh
    - ./log/kpi:/srv/logs
    - ./scripts/wait_for_rabbit.bash:/etc/my_init.d/01_wait_for_rabbit.bash:ro
    - ./scripts/wait_for_mongo.bash:/etc/my_init.d/02_wait_for_mongo.bash:ro
    - ./scripts/wait_for_postgres.bash:/etc/my_init.d/03_wait_for_postgres.bash:ro
    - ./scripts/create_kobo_superuser.bash://etc/my_init.d/20_create_kobo_superuser.bash:ro
    - ./scripts/runtime_variables_kpi.source.bash:/etc/profile.d/runtime_variables_kpi.source.bash.sh:ro
    # Dev: Use live source directories from the host machine.
    # - ../kpi:/srv/src/kpi
    #- ../formpack/src/formpack:/usr/local/lib/python2.7/dist-packages/formpack
    # Allow access to Kobocat's media uploads within KPI
    - ./.vols/kobocat_media_uploads:/srv/src/kobocat/media
    # Dev: Share PyDev remote debugger source into container.
    #- ~/devel/liclipse/plugins/org.python.pydev_5.4.0.201611281405/pysrc:/srv/pydev_orig:ro
    # Dev: Share your `.transifexrc` into the container.
    # - ./.transifexrc:/root/.transifexrc
  restart: on-failure

nginx:
  image: kobotoolbox/nginx:latest
  # Dev: Build the image locally.
  # build: ./base_images/nginx
  hostname: nginx
  env_file:
    - ./envfile.local.txt
    - ./envfiles/local/nginx.txt
    - ./envfiles/local/kobocat.txt
    - ./envfiles/local/kpi.txt
  environment:
    - NGINX_CONFIG_FILE_NAME=nginx_site_http.conf
  ports:
    # NOTE: The host ports (left of the ":") must match the values in
    #   `envfile.local.txt`. Do not modify the container ports (right side).
    - 8000:9000 # KPI
    - 8001:9001 # KoBoCAT
    - 8005:9005 # Enketo Express
  volumes:
      - ./.vols/static:/srv/www:ro
      # get the logs out of glusterfs!
      - ./log/nginx:/var/log/nginx
      - ./nginx/:/tmp/kobo_nginx/:ro
      - ./nginx/nginx_command.bash:/etc/service/nginx/run:ro
  links:
    - kobocat
    - kpi
    - enketo_express
  restart: on-failure

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
enketo_express:
  image: kobotoolbox/enketo-express-extra-widgets:1.70.1
  # Dev: Build the image locally.
  # build: ../enketo-express/
  env_file:
    - ./envfile.local.txt
    - ./envfiles/local/external_services.txt
  links:
    - redis_main
    - redis_cache
  restart: on-failure
  volumes:
    - ./scripts/runtime_variables_enketo_express.source.bash:/etc/profile.d/runtime_variables_enketo_express.source.bash.sh:ro
    - ./enketo_express/config.json:/srv/tmp/enketo_express_config.json:ro
    - ./scripts/enketo_express_copy_config.bash:/etc/my_init.d/01_enketo_express_copy_config.bash:ro
    # Override Enketo Express icons.
    - ./enketo_express/favicon.ico:/srv/src/enketo_express/public/images/favicon.ico:ro
    - ./enketo_express/icon_180x180.png:/srv/src/enketo_express/public/images/icon_180x180.png:ro
    # Dev: Use the live `enketo-express` directory from the host machine.
    # - ../enketo-express:/srv/src/enketo_express

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
redis_main:
  image: redis:2.6
  # Map our "main" Redis config into the container.
  volumes:
    - ./redis/redis-enketo-main.conf:/etc/redis/redis.conf:ro
    - ./.vols/redis_main_data/:/data/
  restart: on-failure

# Adapted from https://github.com/kobotoolbox/enketo-express/blob/docker/docker-compose.yml.
redis_cache:
  image: redis:2.6
  # Map our "cache" Redis config into the container.
  volumes:
    - ./redis/redis-enketo-cache.conf:/etc/redis/redis.conf:ro
  restart: on-failure
